// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category{
  id Int @id @default(autoincrement())
  name String @unique
  slug String @unique
  feedbacks Feedback[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feedback{
  id Int @id @default(autoincrement())
  title String
  description String
  slug String @unique
  user User @relation(fields: [userId], references: [id])
  userId Int
  likes Like[]
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  comments Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User{
  id Int @id @default(autoincrement())
  name  String 
  email String @unique
  password String
  likes Like[]
  feedbacks Feedback[]
  comments Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id Int @id @default(autoincrement())
  feedback Feedback @relation(fields: [feedbackId], references: [id])
  feedbackId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment{
  id Int @id @default(autoincrement())
  description String
  user User @relation(fields: [userId], references: [id])
  userId Int
  feedback Feedback @relation(fields: [feedbackId], references: [id])
  feedbackId Int
  parent Comment? @relation(name: "CommentSubComments", fields: [parentId], references: [id])
  parentId Int?
  subComments Comment[] @relation(name: "CommentSubComments")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
